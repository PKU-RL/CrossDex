params:
  name: "dagger"
  log_dir: './runs_multidex_dagger'

  is_vision: True
  policy: 
    backbone_type: pn
    freeze_backbone: False
    pi_hid_sizes: [1024, 1024, 512, 512]
    vf_hid_sizes: [1024, 1024, 512, 512]
    activation: elu # can be elu, relu, selu, crelu, lrelu, tanh, sigmoid
    pc_shape: [512, 3] # point cloud shape
    pc_emb_dim: 128

  test: ${...test}
  test_expert: ${...test_expert}
  resume: 0
  save_interval: 200 # check for potential saves every this many iterations
  print_log: True

  # rollout params
  max_iterations: 10000

  # training params
  #cliprange: 0.2
  #ent_coef: 0
  #buffer_size: 8 # storage buffer: buffer_size * num_envs
  nsteps: 8 # dagger buffer size = ppo buffer size = nsteps * num_envs
  noptepochs: 5
  nminibatches: 32
  max_grad_norm: 1
  optim_stepsize: 3.e-4 # 3e-4 is default for single agent training with constant schedule
  schedule: adaptive # could be adaptive or linear or fixed
  #desired_kl: 0.016
  #gamma: 0.96
  #lam: 0.95
  init_noise_std: 0.8
  #log_interval: 1
  asymmetric: False

  value_loss:
    apply: False #True
    use_clipped_value_loss: True
    value_loss_coef: 0.1
    gamma: 0.96
    lam: 0.95
    clip_range: 0.2 # 0.5

  # pre-train an expert for each object
  expert: ${...expert}

  # predict arm dof pos
  pred_arm_dof_pos: False